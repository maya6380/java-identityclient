//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vhudson-jaxb-ri-2.1-833 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2013.01.03 at 09:12:21 PM CST 
//


package org.openstack.keystone.client.faults;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the org.openstack.keystone.client.faults package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _TenantConflict_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "tenantConflict");
    private final static QName _BadRequest_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "badRequest");
    private final static QName _Unauthorized_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "unauthorized");
    private final static QName _OverLimit_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "overLimit");
    private final static QName _Forbidden_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "forbidden");
    private final static QName _ServiceUnavailable_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "serviceUnavailable");
    private final static QName _UserDisabled_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "userDisabled");
    private final static QName _IdentityFault_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "identityFault");
    private final static QName _ItemNotFound_QNAME = new QName("http://docs.openstack.org/identity/api/v2.0", "itemNotFound");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: org.openstack.keystone.client.faults
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link OverLimitFault }
     * 
     */
    public OverLimitFault createOverLimitFault() {
        return new OverLimitFault();
    }

    /**
     * Create an instance of {@link UnauthorizedFault }
     * 
     */
    public UnauthorizedFault createUnauthorizedFault() {
        return new UnauthorizedFault();
    }

    /**
     * Create an instance of {@link ItemNotFoundFault }
     * 
     */
    public ItemNotFoundFault createItemNotFoundFault() {
        return new ItemNotFoundFault();
    }

    /**
     * Create an instance of {@link BadRequestFault }
     * 
     */
    public BadRequestFault createBadRequestFault() {
        return new BadRequestFault();
    }

    /**
     * Create an instance of {@link ServiceUnavailableFault }
     * 
     */
    public ServiceUnavailableFault createServiceUnavailableFault() {
        return new ServiceUnavailableFault();
    }

    /**
     * Create an instance of {@link IdentityFault }
     * 
     */
    public IdentityFault createIdentityFault() {
        return new IdentityFault();
    }

    /**
     * Create an instance of {@link TenantConflictFault }
     * 
     */
    public TenantConflictFault createTenantConflictFault() {
        return new TenantConflictFault();
    }

    /**
     * Create an instance of {@link ForbiddenFault }
     * 
     */
    public ForbiddenFault createForbiddenFault() {
        return new ForbiddenFault();
    }

    /**
     * Create an instance of {@link UserDisabledFault }
     * 
     */
    public UserDisabledFault createUserDisabledFault() {
        return new UserDisabledFault();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TenantConflictFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "tenantConflict")
    public JAXBElement<TenantConflictFault> createTenantConflict(TenantConflictFault value) {
        return new JAXBElement<TenantConflictFault>(_TenantConflict_QNAME, TenantConflictFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link BadRequestFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "badRequest")
    public JAXBElement<BadRequestFault> createBadRequest(BadRequestFault value) {
        return new JAXBElement<BadRequestFault>(_BadRequest_QNAME, BadRequestFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UnauthorizedFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "unauthorized")
    public JAXBElement<UnauthorizedFault> createUnauthorized(UnauthorizedFault value) {
        return new JAXBElement<UnauthorizedFault>(_Unauthorized_QNAME, UnauthorizedFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OverLimitFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "overLimit")
    public JAXBElement<OverLimitFault> createOverLimit(OverLimitFault value) {
        return new JAXBElement<OverLimitFault>(_OverLimit_QNAME, OverLimitFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ForbiddenFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "forbidden")
    public JAXBElement<ForbiddenFault> createForbidden(ForbiddenFault value) {
        return new JAXBElement<ForbiddenFault>(_Forbidden_QNAME, ForbiddenFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ServiceUnavailableFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "serviceUnavailable")
    public JAXBElement<ServiceUnavailableFault> createServiceUnavailable(ServiceUnavailableFault value) {
        return new JAXBElement<ServiceUnavailableFault>(_ServiceUnavailable_QNAME, ServiceUnavailableFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link UserDisabledFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "userDisabled")
    public JAXBElement<UserDisabledFault> createUserDisabled(UserDisabledFault value) {
        return new JAXBElement<UserDisabledFault>(_UserDisabled_QNAME, UserDisabledFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link IdentityFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "identityFault")
    public JAXBElement<IdentityFault> createIdentityFault(IdentityFault value) {
        return new JAXBElement<IdentityFault>(_IdentityFault_QNAME, IdentityFault.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link ItemNotFoundFault }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "http://docs.openstack.org/identity/api/v2.0", name = "itemNotFound")
    public JAXBElement<ItemNotFoundFault> createItemNotFound(ItemNotFoundFault value) {
        return new JAXBElement<ItemNotFoundFault>(_ItemNotFound_QNAME, ItemNotFoundFault.class, null, value);
    }

}
